/*
 * Users Service
 *
 * Sample API document for Users service
 *
 * API version: 0.1.0
 * Contact: hello@example.com
 * Generated by: Swagger Codegen (https://github.com/swagger-api/swagger-codegen.git)
 */

package swagger

import (
	"encoding/json"
	"net/http"

	"github.com/gorilla/mux"
)

var users []User

func CreateUser(w http.ResponseWriter, r *http.Request) {
	w.Header().Set("Content-Type", "application/json; charset=UTF-8")
	decoder := json.NewDecoder(r.Body)
	var user User
	err := decoder.Decode(&user)
	if err != nil {
		panic(err)
	}
	users = append(users, user)
	w.WriteHeader(http.StatusCreated)
}

func DeleteUser(w http.ResponseWriter, r *http.Request) {
	w.Header().Set("Content-Type", "application/json; charset=UTF-8")
	vars := mux.Vars(r)
	for i, u := range users {
		if u.Username == vars["username"] {
			users = append(users[:i], users[i+1:]...)
			break
		}
	}
	w.WriteHeader(http.StatusOK)
}

func GetUserByName(w http.ResponseWriter, r *http.Request) {
	w.Header().Set("Content-Type", "application/json; charset=UTF-8")
	var user User
	vars := mux.Vars(r)
	for _, u := range users {
		if u.Username == vars["username"] {
			user = u
			break
		}
	}
	userJSON, err := json.Marshal(user)
	if err != nil {
		panic(err)
	}
	w.WriteHeader(http.StatusOK)
	w.Write(userJSON)
}

func UpdateUser(w http.ResponseWriter, r *http.Request) {
	w.Header().Set("Content-Type", "application/json; charset=UTF-8")
	decoder := json.NewDecoder(r.Body)
	var user User
	err := decoder.Decode(&user)
	if err != nil {
		panic(err)
	}
	vars := mux.Vars(r)
	for i, u := range users {
		if u.Username == vars["username"] {
			users[i] = user
			break
		}
	}
	w.WriteHeader(http.StatusOK)
}
